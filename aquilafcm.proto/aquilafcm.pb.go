// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.28.0
// source: proton/aquilafcm.proto

package aquilafcm_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enumerations for AndroidNotificationPriority
type AndroidNotificationPriority int32

const (
	AndroidNotificationPriority_PRIORITY_UNSPECIFIED AndroidNotificationPriority = 0
	AndroidNotificationPriority_PRIORITY_MIN         AndroidNotificationPriority = 1
	AndroidNotificationPriority_PRIORITY_LOW         AndroidNotificationPriority = 2
	AndroidNotificationPriority_PRIORITY_DEFAULT     AndroidNotificationPriority = 3
	AndroidNotificationPriority_PRIORITY_HIGH        AndroidNotificationPriority = 4
	AndroidNotificationPriority_PRIORITY_MAX         AndroidNotificationPriority = 5
)

// Enum value maps for AndroidNotificationPriority.
var (
	AndroidNotificationPriority_name = map[int32]string{
		0: "PRIORITY_UNSPECIFIED",
		1: "PRIORITY_MIN",
		2: "PRIORITY_LOW",
		3: "PRIORITY_DEFAULT",
		4: "PRIORITY_HIGH",
		5: "PRIORITY_MAX",
	}
	AndroidNotificationPriority_value = map[string]int32{
		"PRIORITY_UNSPECIFIED": 0,
		"PRIORITY_MIN":         1,
		"PRIORITY_LOW":         2,
		"PRIORITY_DEFAULT":     3,
		"PRIORITY_HIGH":        4,
		"PRIORITY_MAX":         5,
	}
)

func (x AndroidNotificationPriority) Enum() *AndroidNotificationPriority {
	p := new(AndroidNotificationPriority)
	*p = x
	return p
}

func (x AndroidNotificationPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AndroidNotificationPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_proton_aquilafcm_proto_enumTypes[0].Descriptor()
}

func (AndroidNotificationPriority) Type() protoreflect.EnumType {
	return &file_proton_aquilafcm_proto_enumTypes[0]
}

func (x AndroidNotificationPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AndroidNotificationPriority.Descriptor instead.
func (AndroidNotificationPriority) EnumDescriptor() ([]byte, []int) {
	return file_proton_aquilafcm_proto_rawDescGZIP(), []int{0}
}

// AndroidNotification message
type AndroidNotification struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Title                 string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"` // Overrides the Title field of the Notification type
	Body                  string                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`   // Overrides the Body field of the Notification type
	Icon                  string                 `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Color                 string                 `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"` // Notification color in #RRGGBB format
	Sound                 string                 `protobuf:"bytes,5,opt,name=sound,proto3" json:"sound,omitempty"`
	Tag                   string                 `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag,omitempty"`
	ClickAction           string                 `protobuf:"bytes,7,opt,name=click_action,json=clickAction,proto3" json:"click_action,omitempty"`
	BodyLocKey            string                 `protobuf:"bytes,8,opt,name=body_loc_key,json=bodyLocKey,proto3" json:"body_loc_key,omitempty"`
	BodyLocArgs           []string               `protobuf:"bytes,9,rep,name=body_loc_args,json=bodyLocArgs,proto3" json:"body_loc_args,omitempty"`
	TitleLocKey           string                 `protobuf:"bytes,10,opt,name=title_loc_key,json=titleLocKey,proto3" json:"title_loc_key,omitempty"`
	TitleLocArgs          []string               `protobuf:"bytes,11,rep,name=title_loc_args,json=titleLocArgs,proto3" json:"title_loc_args,omitempty"`
	ChannelId             string                 `protobuf:"bytes,12,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ImageUrl              string                 `protobuf:"bytes,13,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Ticker                string                 `protobuf:"bytes,14,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Sticky                bool                   `protobuf:"varint,15,opt,name=sticky,proto3" json:"sticky,omitempty"`
	EventTimestamp        *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=event_timestamp,json=eventTimestamp,proto3" json:"event_timestamp,omitempty"` // Event timestamp
	LocalOnly             bool                   `protobuf:"varint,17,opt,name=local_only,json=localOnly,proto3" json:"local_only,omitempty"`
	Priority              int32                  `protobuf:"varint,18,opt,name=priority,proto3" json:"priority,omitempty"` // Corresponds to AndroidNotificationPriority enum
	VibrateTimingMillis   []int64                `protobuf:"varint,19,rep,packed,name=vibrate_timing_millis,json=vibrateTimingMillis,proto3" json:"vibrate_timing_millis,omitempty"`
	DefaultVibrateTimings bool                   `protobuf:"varint,20,opt,name=default_vibrate_timings,json=defaultVibrateTimings,proto3" json:"default_vibrate_timings,omitempty"`
	DefaultSound          bool                   `protobuf:"varint,21,opt,name=default_sound,json=defaultSound,proto3" json:"default_sound,omitempty"`
	LightSettings         *LightSettings         `protobuf:"bytes,22,opt,name=light_settings,json=lightSettings,proto3" json:"light_settings,omitempty"`
	DefaultLightSettings  bool                   `protobuf:"varint,23,opt,name=default_light_settings,json=defaultLightSettings,proto3" json:"default_light_settings,omitempty"`
	Visibility            int32                  `protobuf:"varint,24,opt,name=visibility,proto3" json:"visibility,omitempty"`                                        // Corresponds to AndroidNotificationVisibility enum
	NotificationCount     int32                  `protobuf:"varint,25,opt,name=notification_count,json=notificationCount,proto3" json:"notification_count,omitempty"` // Optional notification count
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *AndroidNotification) Reset() {
	*x = AndroidNotification{}
	mi := &file_proton_aquilafcm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AndroidNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidNotification) ProtoMessage() {}

func (x *AndroidNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proton_aquilafcm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidNotification.ProtoReflect.Descriptor instead.
func (*AndroidNotification) Descriptor() ([]byte, []int) {
	return file_proton_aquilafcm_proto_rawDescGZIP(), []int{0}
}

func (x *AndroidNotification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AndroidNotification) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *AndroidNotification) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AndroidNotification) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *AndroidNotification) GetSound() string {
	if x != nil {
		return x.Sound
	}
	return ""
}

func (x *AndroidNotification) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *AndroidNotification) GetClickAction() string {
	if x != nil {
		return x.ClickAction
	}
	return ""
}

func (x *AndroidNotification) GetBodyLocKey() string {
	if x != nil {
		return x.BodyLocKey
	}
	return ""
}

func (x *AndroidNotification) GetBodyLocArgs() []string {
	if x != nil {
		return x.BodyLocArgs
	}
	return nil
}

func (x *AndroidNotification) GetTitleLocKey() string {
	if x != nil {
		return x.TitleLocKey
	}
	return ""
}

func (x *AndroidNotification) GetTitleLocArgs() []string {
	if x != nil {
		return x.TitleLocArgs
	}
	return nil
}

func (x *AndroidNotification) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *AndroidNotification) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *AndroidNotification) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *AndroidNotification) GetSticky() bool {
	if x != nil {
		return x.Sticky
	}
	return false
}

func (x *AndroidNotification) GetEventTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTimestamp
	}
	return nil
}

func (x *AndroidNotification) GetLocalOnly() bool {
	if x != nil {
		return x.LocalOnly
	}
	return false
}

func (x *AndroidNotification) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *AndroidNotification) GetVibrateTimingMillis() []int64 {
	if x != nil {
		return x.VibrateTimingMillis
	}
	return nil
}

func (x *AndroidNotification) GetDefaultVibrateTimings() bool {
	if x != nil {
		return x.DefaultVibrateTimings
	}
	return false
}

func (x *AndroidNotification) GetDefaultSound() bool {
	if x != nil {
		return x.DefaultSound
	}
	return false
}

func (x *AndroidNotification) GetLightSettings() *LightSettings {
	if x != nil {
		return x.LightSettings
	}
	return nil
}

func (x *AndroidNotification) GetDefaultLightSettings() bool {
	if x != nil {
		return x.DefaultLightSettings
	}
	return false
}

func (x *AndroidNotification) GetVisibility() int32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

func (x *AndroidNotification) GetNotificationCount() int32 {
	if x != nil {
		return x.NotificationCount
	}
	return 0
}

// LightSettings message
type LightSettings struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Color                  string                 `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	LightOnDurationMillis  int32                  `protobuf:"varint,2,opt,name=light_on_duration_millis,json=lightOnDurationMillis,proto3" json:"light_on_duration_millis,omitempty"`
	LightOffDurationMillis int32                  `protobuf:"varint,3,opt,name=light_off_duration_millis,json=lightOffDurationMillis,proto3" json:"light_off_duration_millis,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LightSettings) Reset() {
	*x = LightSettings{}
	mi := &file_proton_aquilafcm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LightSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightSettings) ProtoMessage() {}

func (x *LightSettings) ProtoReflect() protoreflect.Message {
	mi := &file_proton_aquilafcm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightSettings.ProtoReflect.Descriptor instead.
func (*LightSettings) Descriptor() ([]byte, []int) {
	return file_proton_aquilafcm_proto_rawDescGZIP(), []int{1}
}

func (x *LightSettings) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *LightSettings) GetLightOnDurationMillis() int32 {
	if x != nil {
		return x.LightOnDurationMillis
	}
	return 0
}

func (x *LightSettings) GetLightOffDurationMillis() int32 {
	if x != nil {
		return x.LightOffDurationMillis
	}
	return 0
}

type MessageAndroidConfig struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	CollapseKey           string                 `protobuf:"bytes,1,opt,name=collapse_key,json=collapseKey,proto3" json:"collapse_key,omitempty"`
	Priority              string                 `protobuf:"bytes,2,opt,name=priority,proto3" json:"priority,omitempty"`
	RestrictedPackageName string                 `protobuf:"bytes,3,opt,name=restricted_package_name,json=restrictedPackageName,proto3" json:"restricted_package_name,omitempty"`
	Data                  map[string]string      `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Notification          *AndroidNotification   `protobuf:"bytes,5,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *MessageAndroidConfig) Reset() {
	*x = MessageAndroidConfig{}
	mi := &file_proton_aquilafcm_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageAndroidConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAndroidConfig) ProtoMessage() {}

func (x *MessageAndroidConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proton_aquilafcm_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAndroidConfig.ProtoReflect.Descriptor instead.
func (*MessageAndroidConfig) Descriptor() ([]byte, []int) {
	return file_proton_aquilafcm_proto_rawDescGZIP(), []int{2}
}

func (x *MessageAndroidConfig) GetCollapseKey() string {
	if x != nil {
		return x.CollapseKey
	}
	return ""
}

func (x *MessageAndroidConfig) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *MessageAndroidConfig) GetRestrictedPackageName() string {
	if x != nil {
		return x.RestrictedPackageName
	}
	return ""
}

func (x *MessageAndroidConfig) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MessageAndroidConfig) GetNotification() *AndroidNotification {
	if x != nil {
		return x.Notification
	}
	return nil
}

// The request message containing the user's name.
type SendSingleTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Title         *string                `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`
	Body          *string                `protobuf:"bytes,3,opt,name=body,proto3,oneof" json:"body,omitempty"`
	ImageUrl      *string                `protobuf:"bytes,4,opt,name=imageUrl,proto3,oneof" json:"imageUrl,omitempty"`
	Data          map[string]string      `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Android       *MessageAndroidConfig  `protobuf:"bytes,6,opt,name=android,proto3" json:"android,omitempty"`
	Ios           map[string]string      `protobuf:"bytes,7,rep,name=ios,proto3" json:"ios,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Webpush       map[string]string      `protobuf:"bytes,8,rep,name=webpush,proto3" json:"webpush,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Topic         *string                `protobuf:"bytes,9,opt,name=topic,proto3,oneof" json:"topic,omitempty"`
	Condition     *string                `protobuf:"bytes,10,opt,name=condition,proto3,oneof" json:"condition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendSingleTokenRequest) Reset() {
	*x = SendSingleTokenRequest{}
	mi := &file_proton_aquilafcm_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendSingleTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSingleTokenRequest) ProtoMessage() {}

func (x *SendSingleTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proton_aquilafcm_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSingleTokenRequest.ProtoReflect.Descriptor instead.
func (*SendSingleTokenRequest) Descriptor() ([]byte, []int) {
	return file_proton_aquilafcm_proto_rawDescGZIP(), []int{3}
}

func (x *SendSingleTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SendSingleTokenRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *SendSingleTokenRequest) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

func (x *SendSingleTokenRequest) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *SendSingleTokenRequest) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SendSingleTokenRequest) GetAndroid() *MessageAndroidConfig {
	if x != nil {
		return x.Android
	}
	return nil
}

func (x *SendSingleTokenRequest) GetIos() map[string]string {
	if x != nil {
		return x.Ios
	}
	return nil
}

func (x *SendSingleTokenRequest) GetWebpush() map[string]string {
	if x != nil {
		return x.Webpush
	}
	return nil
}

func (x *SendSingleTokenRequest) GetTopic() string {
	if x != nil && x.Topic != nil {
		return *x.Topic
	}
	return ""
}

func (x *SendSingleTokenRequest) GetCondition() string {
	if x != nil && x.Condition != nil {
		return *x.Condition
	}
	return ""
}

// The response message containing the greetings
type SendSingleTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Response      string                 `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendSingleTokenResponse) Reset() {
	*x = SendSingleTokenResponse{}
	mi := &file_proton_aquilafcm_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendSingleTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSingleTokenResponse) ProtoMessage() {}

func (x *SendSingleTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proton_aquilafcm_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSingleTokenResponse.ProtoReflect.Descriptor instead.
func (*SendSingleTokenResponse) Descriptor() ([]byte, []int) {
	return file_proton_aquilafcm_proto_rawDescGZIP(), []int{4}
}

func (x *SendSingleTokenResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendSingleTokenResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type SendSingleTokenBulkRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Requests      []*SendSingleTokenRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendSingleTokenBulkRequest) Reset() {
	*x = SendSingleTokenBulkRequest{}
	mi := &file_proton_aquilafcm_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendSingleTokenBulkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSingleTokenBulkRequest) ProtoMessage() {}

func (x *SendSingleTokenBulkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proton_aquilafcm_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSingleTokenBulkRequest.ProtoReflect.Descriptor instead.
func (*SendSingleTokenBulkRequest) Descriptor() ([]byte, []int) {
	return file_proton_aquilafcm_proto_rawDescGZIP(), []int{5}
}

func (x *SendSingleTokenBulkRequest) GetRequests() []*SendSingleTokenRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type SendSingleTokenBulkResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Responses     []*SendSingleTokenResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendSingleTokenBulkResponse) Reset() {
	*x = SendSingleTokenBulkResponse{}
	mi := &file_proton_aquilafcm_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendSingleTokenBulkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSingleTokenBulkResponse) ProtoMessage() {}

func (x *SendSingleTokenBulkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proton_aquilafcm_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSingleTokenBulkResponse.ProtoReflect.Descriptor instead.
func (*SendSingleTokenBulkResponse) Descriptor() ([]byte, []int) {
	return file_proton_aquilafcm_proto_rawDescGZIP(), []int{6}
}

func (x *SendSingleTokenBulkResponse) GetResponses() []*SendSingleTokenResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

var File_proton_aquilafcm_proto protoreflect.FileDescriptor

var file_proton_aquilafcm_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x71, 0x75, 0x69, 0x6c, 0x61, 0x66,
	0x63, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x61, 0x71, 0x75, 0x69, 0x6c, 0x61,
	0x66, 0x63, 0x6d, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x07, 0x0a, 0x13, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x63,
	0x6b, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6c, 0x69, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x62,
	0x6f, 0x64, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x62, 0x6f, 0x64, 0x79, 0x4c, 0x6f, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a,
	0x0d, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6f, 0x64, 0x79, 0x4c, 0x6f, 0x63, 0x41, 0x72, 0x67,
	0x73, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4c,
	0x6f, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c,
	0x6f, 0x63, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x12, 0x43, 0x0a, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x76, 0x69, 0x62, 0x72, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73,
	0x18, 0x13, 0x20, 0x03, 0x28, 0x03, 0x52, 0x13, 0x76, 0x69, 0x62, 0x72, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x69, 0x62, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x62, 0x72, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x61, 0x71, 0x75, 0x69, 0x6c, 0x61, 0x66, 0x63, 0x6d, 0x2e, 0x4c, 0x69, 0x67,
	0x68, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0d, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x2d, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x99,
	0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x18, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x6f, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6c, 0x6c,
	0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4f,
	0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12,
	0x39, 0x0a, 0x19, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x16, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x66, 0x66, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x22, 0xc9, 0x02, 0x0a, 0x14, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x61,
	0x70, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x71, 0x75, 0x69, 0x6c,
	0x61, 0x66, 0x63, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x0c, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x61, 0x71, 0x75, 0x69, 0x6c, 0x61, 0x66, 0x63, 0x6d, 0x2e, 0x41, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x37, 0x0a,
	0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xaa, 0x05, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x71, 0x75,
	0x69, 0x6c, 0x61, 0x66, 0x63, 0x6d, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a,
	0x07, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x61, 0x71, 0x75, 0x69, 0x6c, 0x61, 0x66, 0x63, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x07, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x03, 0x69, 0x6f, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x71, 0x75, 0x69, 0x6c, 0x61, 0x66, 0x63,
	0x6d, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x03, 0x69, 0x6f, 0x73, 0x12, 0x48, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x70, 0x75, 0x73,
	0x68, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x71, 0x75, 0x69, 0x6c, 0x61,
	0x66, 0x63, 0x6d, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57, 0x65, 0x62, 0x70, 0x75,
	0x73, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x77, 0x65, 0x62, 0x70, 0x75, 0x73, 0x68,
	0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x1a, 0x37,
	0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x36, 0x0a, 0x08, 0x49, 0x6f, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x3a, 0x0a, 0x0c, 0x57, 0x65, 0x62, 0x70, 0x75, 0x73, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x0a, 0x1a, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x71, 0x75, 0x69, 0x6c, 0x61, 0x66, 0x63, 0x6d,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x22, 0x5f, 0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x71, 0x75, 0x69, 0x6c, 0x61, 0x66, 0x63, 0x6d, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x2a, 0x96, 0x01, 0x0a, 0x1b, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x10,
	0x0a, 0x0c, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x02,
	0x12, 0x14, 0x0a, 0x10, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x44, 0x45, 0x46,
	0x41, 0x55, 0x4c, 0x54, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x49,
	0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x05, 0x32, 0xd4, 0x01, 0x0a, 0x10,
	0x41, 0x71, 0x75, 0x69, 0x6c, 0x61, 0x46, 0x43, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x5a, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x21, 0x2e, 0x61, 0x71, 0x75, 0x69, 0x6c, 0x61, 0x66, 0x63, 0x6d, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x71, 0x75, 0x69, 0x6c, 0x61, 0x66,
	0x63, 0x6d, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x13,
	0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x75, 0x6c, 0x6b, 0x12, 0x25, 0x2e, 0x61, 0x71, 0x75, 0x69, 0x6c, 0x61, 0x66, 0x63, 0x6d, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x75, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x71, 0x75,
	0x69, 0x6c, 0x61, 0x66, 0x63, 0x6d, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x75, 0x6c, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x25, 0x42, 0x0e, 0x41, 0x71, 0x75, 0x69, 0x6c, 0x61, 0x46, 0x43, 0x4d, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x11, 0x2e, 0x2f, 0x61, 0x71, 0x75, 0x69, 0x6c, 0x61,
	0x66, 0x63, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_proton_aquilafcm_proto_rawDescOnce sync.Once
	file_proton_aquilafcm_proto_rawDescData []byte
)

func file_proton_aquilafcm_proto_rawDescGZIP() []byte {
	file_proton_aquilafcm_proto_rawDescOnce.Do(func() {
		file_proton_aquilafcm_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proton_aquilafcm_proto_rawDesc), len(file_proton_aquilafcm_proto_rawDesc)))
	})
	return file_proton_aquilafcm_proto_rawDescData
}

var file_proton_aquilafcm_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proton_aquilafcm_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proton_aquilafcm_proto_goTypes = []any{
	(AndroidNotificationPriority)(0),    // 0: aquilafcm.AndroidNotificationPriority
	(*AndroidNotification)(nil),         // 1: aquilafcm.AndroidNotification
	(*LightSettings)(nil),               // 2: aquilafcm.LightSettings
	(*MessageAndroidConfig)(nil),        // 3: aquilafcm.MessageAndroidConfig
	(*SendSingleTokenRequest)(nil),      // 4: aquilafcm.SendSingleTokenRequest
	(*SendSingleTokenResponse)(nil),     // 5: aquilafcm.SendSingleTokenResponse
	(*SendSingleTokenBulkRequest)(nil),  // 6: aquilafcm.SendSingleTokenBulkRequest
	(*SendSingleTokenBulkResponse)(nil), // 7: aquilafcm.SendSingleTokenBulkResponse
	nil,                                 // 8: aquilafcm.MessageAndroidConfig.DataEntry
	nil,                                 // 9: aquilafcm.SendSingleTokenRequest.DataEntry
	nil,                                 // 10: aquilafcm.SendSingleTokenRequest.IosEntry
	nil,                                 // 11: aquilafcm.SendSingleTokenRequest.WebpushEntry
	(*timestamppb.Timestamp)(nil),       // 12: google.protobuf.Timestamp
}
var file_proton_aquilafcm_proto_depIdxs = []int32{
	12, // 0: aquilafcm.AndroidNotification.event_timestamp:type_name -> google.protobuf.Timestamp
	2,  // 1: aquilafcm.AndroidNotification.light_settings:type_name -> aquilafcm.LightSettings
	8,  // 2: aquilafcm.MessageAndroidConfig.data:type_name -> aquilafcm.MessageAndroidConfig.DataEntry
	1,  // 3: aquilafcm.MessageAndroidConfig.notification:type_name -> aquilafcm.AndroidNotification
	9,  // 4: aquilafcm.SendSingleTokenRequest.data:type_name -> aquilafcm.SendSingleTokenRequest.DataEntry
	3,  // 5: aquilafcm.SendSingleTokenRequest.android:type_name -> aquilafcm.MessageAndroidConfig
	10, // 6: aquilafcm.SendSingleTokenRequest.ios:type_name -> aquilafcm.SendSingleTokenRequest.IosEntry
	11, // 7: aquilafcm.SendSingleTokenRequest.webpush:type_name -> aquilafcm.SendSingleTokenRequest.WebpushEntry
	4,  // 8: aquilafcm.SendSingleTokenBulkRequest.requests:type_name -> aquilafcm.SendSingleTokenRequest
	5,  // 9: aquilafcm.SendSingleTokenBulkResponse.responses:type_name -> aquilafcm.SendSingleTokenResponse
	4,  // 10: aquilafcm.AquilaFCMService.SendSingleToken:input_type -> aquilafcm.SendSingleTokenRequest
	6,  // 11: aquilafcm.AquilaFCMService.SendSingleTokenBulk:input_type -> aquilafcm.SendSingleTokenBulkRequest
	5,  // 12: aquilafcm.AquilaFCMService.SendSingleToken:output_type -> aquilafcm.SendSingleTokenResponse
	7,  // 13: aquilafcm.AquilaFCMService.SendSingleTokenBulk:output_type -> aquilafcm.SendSingleTokenBulkResponse
	12, // [12:14] is the sub-list for method output_type
	10, // [10:12] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proton_aquilafcm_proto_init() }
func file_proton_aquilafcm_proto_init() {
	if File_proton_aquilafcm_proto != nil {
		return
	}
	file_proton_aquilafcm_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proton_aquilafcm_proto_rawDesc), len(file_proton_aquilafcm_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proton_aquilafcm_proto_goTypes,
		DependencyIndexes: file_proton_aquilafcm_proto_depIdxs,
		EnumInfos:         file_proton_aquilafcm_proto_enumTypes,
		MessageInfos:      file_proton_aquilafcm_proto_msgTypes,
	}.Build()
	File_proton_aquilafcm_proto = out.File
	file_proton_aquilafcm_proto_goTypes = nil
	file_proton_aquilafcm_proto_depIdxs = nil
}
